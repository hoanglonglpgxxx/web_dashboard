widget's circumstances

context.watch<T>() listens to changes on T

context.read<T>() returns T without listening to it

- Stateless versus stateful widgets
Until now, MyAppState covered all your state needs. That's why all the widgets you have written so far are stateless. They don't contain any mutable state of their own. None of the widgets can change itself—they must go through MyAppState.

- Expanded widgets are extremely useful in rows and columns—they let you express layouts where some children take only as much space as they need (SafeArea, in this case) and other widgets should take as much of the remaining room as possible (Expanded, in this case). One way to think about Expanded widgets is that they are "greedy". If you want to get a better feel of the role of this widget, try wrapping the SafeArea widget with another Expanded. The resulting layout looks something like this:

 Wrap is a widget similar to Row or Column that automatically wraps children to the next "line" (called "run") when there isn't enough vertical or horizontal space. There's FittedBox, a widget that automatically fits its child into available space according to your specifications.
 
 LayoutBuilder's builder callback is called every time the constraints change. This happens when, for example:

- The user resizes the app's window
The user rotates their phone from portrait mode to landscape mode, or back
Some widget next to MyHomePage grows in size, making MyHomePage's constraints smaller
And so on

Loại vừa làm
https://codelabs.developers.google.com/codelabs/flutter-codelab-first#7
Advanced type của loại vừa làm
https://dartpad.dev/?id=e7076b40fb17a0fa899f9f7a154a02e8

Flutter Courses
https://seenickcode.com/courses/flutter-basics
https://seenickcode.com/
https://www.udemy.com/course/learn-flutter-dart-to-build-ios-android-apps/?ranMID=39197&ranEAID=jU79Zysihs4&ranSiteID=jU79Zysihs4-s07IkQQ6lboWDTp6rZrs0w&LSNPUBID=jU79Zysihs4&utm_source=aff-campaign&utm_medium=udemyads

https://api.flutter.dev/flutter/widgets/GlobalKey-class.html